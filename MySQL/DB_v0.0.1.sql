-- MySQL Script generated by MySQL Workbench
-- Mon Nov 21 16:00:40 2016
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema wabm
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema wabm
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `wabm` DEFAULT CHARACTER SET utf8 ;
USE `wabm` ;

-- -----------------------------------------------------
-- Table `wabm`.`supplier`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `wabm`.`supplier` (
  `suppiler_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `address` VARCHAR(45) NULL,
  `phone` VARCHAR(20) NOT NULL,
  `representative_name` VARCHAR(45) NULL,
  PRIMARY KEY (`suppiler_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wabm`.`employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `wabm`.`employee` (
  `employee_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `birth_date` DATE NULL,
  `sex_status` INT NOT NULL,
  `phone` VARCHAR(20) NULL,
  `position_status` INT NOT NULL,
  PRIMARY KEY (`employee_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wabm`.`classification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `wabm`.`classification` (
  `classification_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `profit_db` DOUBLE NOT NULL,
  `tax_rate_db` DOUBLE NOT NULL,
  PRIMARY KEY (`classification_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wabm`.`commodity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `wabm`.`commodity` (
  `commodity_id` CHAR(1) NOT NULL,
  `classification_id` INT NOT NULL,
  `bar_code` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `shelf_life` VARCHAR(45) NOT NULL,
  `specification` VARCHAR(45) NULL,
  `unit` VARCHAR(45) NULL,
  `price_db` DECIMAL(8,2) NULL,
  `start_storage` INT NOT NULL,
  `delivery_specification` INT NOT NULL,
  `sales_avg` DOUBLE NULL,
  `storage` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`commodity_id`, `classification_id`),
  INDEX `fk_Commodity_Classification1_idx` (`classification_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wabm`.`order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `wabm`.`order` (
  `order_id` INT NOT NULL AUTO_INCREMENT,
  `suppiler_id` INT NOT NULL,
  `employee_id` INT NOT NULL,
  `status` INT NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `bill_timestamp` TIMESTAMP NULL,
  PRIMARY KEY (`order_id`, `suppiler_id`, `employee_id`),
  INDEX `fk_Supplier_has_Employee_Supplier_idx` (`suppiler_id` ASC, `employee_id` ASC),
  INDEX `fk_Order_Employee1_idx` (`employee_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wabm`.`sales_Record`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `wabm`.`sales_Record` (
  `sales_order_id` INT NOT NULL AUTO_INCREMENT,
  `employee_id` INT NOT NULL,
  `timestamp` TIMESTAMP NOT NULL,
  `all_price_db` DOUBLE NOT NULL,
  PRIMARY KEY (`sales_order_id`, `employee_id`),
  INDEX `fk_Employee_has_Commodity_Employee1_idx` (`employee_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wabm`.`sales_record_detail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `wabm`.`sales_record_detail` (
  `sales_record_detail_id` INT NOT NULL AUTO_INCREMENT,
  `employee_id` INT NOT NULL,
  `commodity_id` INT NOT NULL,
  `quantity` INT NOT NULL,
  `price_db` DOUBLE NOT NULL,
  PRIMARY KEY (`sales_record_detail_id`, `employee_id`, `commodity_id`),
  INDEX `fk_Sales_Record_Detail_Commodity1_idx` (`commodity_id` ASC),
  INDEX `fk_Sales_Record_Detail_Sales_Record1_idx` (`employee_id` ASC, `commodity_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wabm`.`order_detail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `wabm`.`order_detail` (
  `order_detail_id` INT NOT NULL AUTO_INCREMENT,
  `commodity_id` INT NOT NULL,
  `order_id` INT NOT NULL,
  `suppiler_id` INT NOT NULL,
  `employee_id` INT NOT NULL,
  `quantity` INT NOT NULL,
  `price_db` DOUBLE NOT NULL,
  `production_date` DATE NULL,
  PRIMARY KEY (`order_detail_id`, `commodity_id`, `order_id`, `suppiler_id`, `employee_id`),
  INDEX `fk_Order_Detail_Commodity1_idx` (`commodity_id` ASC, `order_id` ASC),
  INDEX `fk_Order_Detail_Order2_idx` (`order_id` ASC, `suppiler_id` ASC, `employee_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wabm`.`supplyList`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `wabm`.`supplyList` (
  `supply_list_id` INT NOT NULL AUTO_INCREMENT,
  `suppiler_id` INT NOT NULL,
  `lastupdate_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`supply_list_id`, `suppiler_id`),
  INDEX `fk_supplyList_supplier1_idx` (`suppiler_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wabm`.`inventory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `wabm`.`inventory` (
  `inventory_id` INT NOT NULL AUTO_INCREMENT,
  `employee_id` INT NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `fill_timestamp` TIMESTAMP NULL,
  PRIMARY KEY (`inventory_id`, `employee_id`),
  INDEX `fk_inventory_employee1_idx` (`employee_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wabm`.`cash_register`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `wabm`.`cash_register` (
  `cash_register_id` INT NOT NULL,
  `note` VARCHAR(45) NULL,
  PRIMARY KEY (`cash_register_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wabm`.`change_record`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `wabm`.`change_record` (
  `cash_register_id` INT NOT NULL AUTO_INCREMENT,
  `employee_employee_id` INT NOT NULL,
  `money_in_db` DOUBLE NOT NULL,
  `money_out_db` DOUBLE NULL,
  `money_should_out_db` DOUBLE NULL,
  `date` TIMESTAMP NULL,
  PRIMARY KEY (`cash_register_id`, `employee_employee_id`),
  INDEX `fk_cash_register_has_employee_employee1_idx` (`employee_employee_id` ASC),
  INDEX `fk_cash_register_has_employee_cash_register1_idx` (`cash_register_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wabm`.`inventory_detail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `wabm`.`inventory_detail` (
  `inventory_detail_id` INT NOT NULL AUTO_INCREMENT,
  `commodity_id` INT NOT NULL,
  `classification_id` INT NOT NULL,
  `inventory_id` INT NOT NULL,
  `quantity` INT NULL,
  PRIMARY KEY (`inventory_detail_id`, `commodity_id`, `classification_id`, `inventory_id`),
  INDEX `fk_inventory_detail_commodity1_idx` (`commodity_id` ASC, `classification_id` ASC),
  INDEX `fk_inventory_detail_inventory1_idx` (`inventory_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wabm`.`storage_change`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `wabm`.`storage_change` (
  `storage_change_id` INT NOT NULL AUTO_INCREMENT,
  `commodity_id` INT NOT NULL,
  `classification_id` INT NOT NULL,
  `employee_id` INT NOT NULL,
  `quantity` INT NOT NULL,
  `price_db` DOUBLE NOT NULL,
  PRIMARY KEY (`storage_change_id`, `commodity_id`, `classification_id`, `employee_id`),
  INDEX `fk_warehouse_has_commodity_commodity1_idx` (`commodity_id` ASC, `classification_id` ASC),
  INDEX `fk_change_record_employee1_idx` (`employee_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wabm`.`procurement_requirement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `wabm`.`procurement_requirement` (
  `procurement_requirement` INT NOT NULL,
  `employee_id` INT NOT NULL,
  `commodity_id` INT NOT NULL,
  `classification_id` INT NOT NULL,
  `quantity` INT NOT NULL,
  `status` INT NOT NULL,
  PRIMARY KEY (`procurement_requirement`, `employee_id`, `commodity_id`, `classification_id`),
  INDEX `fk_employee_has_commodity_commodity1_idx` (`commodity_id` ASC, `classification_id` ASC),
  INDEX `fk_employee_has_commodity_employee1_idx` (`employee_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wabm`.`supply_detail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `wabm`.`supply_detail` (
  `supply_detail_id` INT NOT NULL AUTO_INCREMENT,
  `supply_list_id` INT NOT NULL,
  `commodity_id` INT NOT NULL,
  `classification_id` INT NOT NULL,
  `price_db` DOUBLE NOT NULL,
  `quantity` INT NOT NULL,
  `delivery_time_cost` INT NOT NULL,
  PRIMARY KEY (`supply_detail_id`, `supply_list_id`, `commodity_id`, `classification_id`),
  INDEX `fk_supply_detail_supplyList1_idx` (`supply_list_id` ASC),
  INDEX `fk_supply_detail_commodity1_idx` (`commodity_id` ASC, `classification_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wabm`.`Account`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `wabm`.`Account` (
  `account_id` INT NOT NULL AUTO_INCREMENT,
  `employee_employee_id` INT NOT NULL,
  `account` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  PRIMARY KEY (`account_id`, `employee_employee_id`),
  INDEX `fk_Account_employee1_idx` (`employee_employee_id` ASC))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
